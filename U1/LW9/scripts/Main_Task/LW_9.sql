create table TIMES
(
    TIME_ID DATE NOT NULL,
    DAY_NAME VARCHAR2(20),
    DAY_NUMBER_IN_MONTH VARCHAR2(20),
    CALENDAR_MONTH_NAME VARCHAR2(20),
    CALENDAR_MONTH_IN_YEAR VARCHAR2(20),
    CALENDAR_YEAR_NAME VARCHAR2(20)
)
PARTITION BY RANGE (TIME_ID)
(
PARTITION PART_1 VALUES LESS THAN (TO_DATE('10/08/2001', 'DD/MM/YYYY')),
PARTITION PART_2 VALUES LESS THAN (TO_DATE('16/12/2008', 'DD/MM/YYYY'))
)
TABLESPACE TS_REFERENCES_EXT_DATA_01;


ALTER TABLE TIMES
MERGE PARTITIONS PART_1, PART_2 INTO PARTITION PART_3;

ALTER TABLE TIMES MOVE PARTITION PART_3
    TABLESPACE TS_REFERENCES_DATA_01 NOLOGGING COMPRESS;
    
select TABLESPACE_NAME from dba_tablespaces;

ALTER TABLE TIMES SPLIT PARTITION PART_3
    AT (TO_DATE('10-05-2000', 'MM-DD-YYYY'))
    INTO(PARTITION PART_1, PARTITION PART_2);
    
ALTER TABLE TIMES TRUNCATE PARTITION PART_1;

ALTER TABLE TIMES drop PARTITION PART_1;

ALTER TABLE TIMES 
    ADD PARTITION PART_1 VALUES LESS THAN (TO_DATE('10/08/2012', 'DD/MM/YYYY'))
    TABLESPACE TS_REFERENCES_EXT_DATA_01;
    
drop table times;


create table TIMES
(
    TIME_ID DATE NOT NULL,
    DAY_NAME VARCHAR2(20),
    DAY_NUMBER_IN_MONTH VARCHAR2(20),
    CALENDAR_MONTH_NAME VARCHAR2(20),
    CALENDAR_MONTH_IN_YEAR VARCHAR2(20),
    CALENDAR_YEAR_NAME VARCHAR2(20)
)
PARTITION BY LIST (DAY_NAME)
(
PARTITION PART_1 VALUES ('MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY'),
PARTITION PART_2 VALUES ('FRIDAY', 'SATURDAY', 'SUNDAY')
)
TABLESPACE TS_REFERENCES_EXT_DATA_01;

ALTER TABLE TIMES
MERGE PARTITIONS PART_1, PART_2 
INTO PARTITION PART_3;

ALTER TABLE TIMES MOVE PARTITION PART_3
    TABLESPACE TS_REFERENCES_DATA_01 NOLOGGING COMPRESS;
    
select TABLESPACE_NAME from dba_tablespaces;

ALTER TABLE TIMES SPLIT PARTITION PART_3
    VALUES('MONDAY', 'TUESDAY')
    INTO(PARTITION PART_4, PARTITION PART_5);
    
ALTER TABLE TIMES TRUNCATE PARTITION PART_4;

ALTER TABLE TIMES drop PARTITION PART_5;

ALTER TABLE TIMES 
    ADD PARTITION PART_1 VALUES ('Friday')
    TABLESPACE TS_REFERENCES_EXT_DATA_01;
    
select * from times partition(part_4);

DROP TABLE TIMES;

create table times 
PARTITION BY HASH (CALENDAR_MONTH_NAME)
(
PARTITION JAN,
PARTITION FEB,
PARTITION MAR,
PARTITION APR,
PARTITION MAY,
PARTITION JUN,
PARTITION JUL,
PARTITION AUG
)
TABLESPACE TS_REFERENCES_EXT_DATA_01
as select * from (
SELECT 
  TRUNC( sd + rn ) time_id,
  TO_CHAR( sd + rn, 'fmDay' ) day_name,
  TO_CHAR( sd + rn, 'D' ) day_number_in_week,
  TO_CHAR( sd + rn, 'DD' ) day_number_in_month,
  TO_CHAR( sd + rn, 'DDD' ) day_number_in_year,
  TO_CHAR( sd + rn, 'WW' ) calendar_week_number,
  ( CASE
      WHEN TO_CHAR( sd + rn, 'D' ) IN ( 1, 2, 3, 4, 5, 6 ) THEN
        NEXT_DAY( sd + rn, '—”¡¡Œ“¿' )
      ELSE
        ( sd + rn )
    END ) week_ending_date,
  TO_CHAR( sd + rn, 'MM' ) calendar_month_number,
  TO_CHAR( LAST_DAY( sd + rn ), 'DD' ) days_in_cal_month,
  LAST_DAY( sd + rn ) end_of_cal_month,
  TO_CHAR( sd + rn, 'FMMonth' ) calendar_month_name,
  ( ( CASE
      WHEN TO_CHAR( sd + rn, 'Q' ) = 1 THEN
        TO_DATE( '03/31/' || TO_CHAR( sd + rn, 'YYYY' ), 'MM/DD/YYYY' )
      WHEN TO_CHAR( sd + rn, 'Q' ) = 2 THEN
        TO_DATE( '06/30/' || TO_CHAR( sd + rn, 'YYYY' ), 'MM/DD/YYYY' )
      WHEN TO_CHAR( sd + rn, 'Q' ) = 3 THEN
        TO_DATE( '09/30/' || TO_CHAR( sd + rn, 'YYYY' ), 'MM/DD/YYYY' )
      WHEN TO_CHAR( sd + rn, 'Q' ) = 4 THEN
        TO_DATE( '12/31/' || TO_CHAR( sd + rn, 'YYYY' ), 'MM/DD/YYYY' )
    END ) - TRUNC( sd + rn, 'Q' ) + 1 ) days_in_cal_quarter,
  TRUNC( sd + rn, 'Q' ) beg_of_cal_quarter,
  ( CASE
      WHEN TO_CHAR( sd + rn, 'Q' ) = 1 THEN
        TO_DATE( '03/31/' || TO_CHAR( sd + rn, 'YYYY' ), 'MM/DD/YYYY' )
      WHEN TO_CHAR( sd + rn, 'Q' ) = 2 THEN
        TO_DATE( '06/30/' || TO_CHAR( sd + rn, 'YYYY' ), 'MM/DD/YYYY' )
      WHEN TO_CHAR( sd + rn, 'Q' ) = 3 THEN
        TO_DATE( '09/30/' || TO_CHAR( sd + rn, 'YYYY' ), 'MM/DD/YYYY' )
      WHEN TO_CHAR( sd + rn, 'Q' ) = 4 THEN
        TO_DATE( '12/31/' || TO_CHAR( sd + rn, 'YYYY' ), 'MM/DD/YYYY' )
    END ) end_of_cal_quarter,
  TO_CHAR( sd + rn, 'Q' ) calendar_quarter_number,
  TO_CHAR( sd + rn, 'YYYY' ) calendar_year,
  ( TO_DATE( '12/31/' || TO_CHAR( sd + rn, 'YYYY' ), 'MM/DD/YYYY' )
    - TRUNC( sd + rn, 'YEAR' ) ) days_in_cal_year,
  TRUNC( sd + rn, 'YEAR' ) beg_of_cal_year,
  TO_DATE( '12/31/' || TO_CHAR( sd + rn, 'YYYY' ), 'MM/DD/YYYY' ) end_of_cal_year
FROM
  ( 
    SELECT 
      TO_DATE( '12/31/2002', 'MM/DD/YYYY' ) sd,
      rownum rn
    FROM dual
      CONNECT BY level <= 200
  ));

CREATE TABLE TIMES
    ( 
    TIME_ID DATE NOT NULL,
    DAY_NAME VARCHAR2(20),
    DAY_NUMBER_IN_MONTH VARCHAR2(20),
    CALENDAR_MONTH_NAME VARCHAR2(20),
    CALENDAR_MONTH_IN_YEAR VARCHAR2(20),
    CALENDAR_YEAR_NAME VARCHAR2(20)
    ) 
  PARTITION BY RANGE (time_id) 
  INTERVAL(NUMTOYMINTERVAL(1, 'MONTH'))
    ( PARTITION PART_1 VALUES LESS THAN (TO_DATE('1-1-2008', 'DD-MM-YYYY')),
      PARTITION PART_2 VALUES LESS THAN (TO_DATE('1-1-2009', 'DD-MM-YYYY')),
      PARTITION PART_3 VALUES LESS THAN (TO_DATE('1-7-2009', 'DD-MM-YYYY')),
      PARTITION PART_4 VALUES LESS THAN (TO_DATE('1-1-2010', 'DD-MM-YYYY')) )
TABLESPACE TS_REFERENCES_EXT_DATA_01;


ALTER TABLE TIMES
MERGE PARTITIONS PART_1, PART_2 INTO PARTITION PART_5;

ALTER TABLE TIMES MOVE PARTITION PART_3
    TABLESPACE TS_REFERENCES_DATA_01 NOLOGGING COMPRESS;

ALTER TABLE TIMES SPLIT PARTITION PART_5
    AT (TO_DATE('10-05-2000', 'MM-DD-YYYY'))
    INTO(PARTITION PART_1, PARTITION PART_2);
    
ALTER TABLE TIMES TRUNCATE PARTITION PART_1;

ALTER TABLE TIMES drop PARTITION PART_1;

DROP TABLE TIMES;

create table TIMES
(
    TIME_ID DATE NOT NULL,
    DAY_NAME VARCHAR2(20),
    DAY_NUMBER_IN_MONTH VARCHAR2(20),
    CALENDAR_MONTH_NAME VARCHAR2(20),
    CALENDAR_MONTH_IN_YEAR VARCHAR2(20),
    CALENDAR_YEAR_NAME VARCHAR2(20),
    CONSTRAINT time_pk PRIMARY KEY(time_id)
)
PARTITION BY RANGE (TIME_ID)
(
PARTITION PART_1 VALUES LESS THAN (TO_DATE('10/08/2001', 'DD/MM/YYYY')),
PARTITION PART_2 VALUES LESS THAN (TO_DATE('16/12/2008', 'DD/MM/YYYY'))
)
TABLESPACE TS_REFERENCES_EXT_DATA_01;

CREATE TABLE order_times
    ( order_id           NUMBER(12) NOT NULL,
      TIME_ID            DATE NOT NULL,
      line_item_id       NUMBER(3)  NOT NULL,
      product_id         NUMBER(6)  NOT NULL,
      unit_price         NUMBER(8,2),
      quantity           NUMBER(8),
      CONSTRAINT TIME_ID_fk
      FOREIGN KEY(TIME_ID) REFERENCES TIMES(TIME_ID)
    )
    PARTITION BY REFERENCE(TIME_ID_fk)
    TABLESPACE TS_REFERENCES_EXT_DATA_01;

ALTER TABLE order_times MOVE PARTITION PART_2
    TABLESPACE TS_REFERENCES_DATA_01 NOLOGGING COMPRESS;
    
ALTER TABLE order_times TRUNCATE PARTITION PART_2;